<template>


	<view class="container_abl">


		<!-- 相册容器 -->
		<view class="con_main" :class="ipData.conOpen?'tf_en':'tf_st'">
			<uni-navbar-lite :title="ipData.pattern == 1?'Tank 相册':'选择备份的相册'" :leftIcon="false" nbStyle="height:50px;">
				<template #left>
					<!--  备份任务进度提示 -->
					<text v-if="appTaskStatus.backups == 1"
						style="position: absolute;left: 12px;">{{albumArrayData.upFileCount}}/{{albumArrayData.allUpFileCount}}</text>
					<text v-else-if="appTaskStatus.backups == 2" style="position: absolute;left: 12px;">同步完成</text>
				</template>
				<template #right>
					<image v-if="ipData.pattern == 1" class="head_img" @click="drawerSwitch" :src="user.avatarUrl">
					</image>
					<view v-else-if="ipData.pattern == 2" class="head_bakcif_btn cent" @click="bakPage">
						<text class="col_fg">返回</text>
					</view>
				</template>
				<!-- 上传进度条 -->
				<template #bottom>
					<progress v-if="appTaskStatus.backups == 1" :stroke-width="2" :percent="percent_input"
						:activeColor="theme.primaryColor" style="width: 100%" :backgroundColor="theme.fgColor">
					</progress>
				</template>
			</uni-navbar-lite>

			<view v-if="albumArrayData.authorizationStatus == false" class="req_perssion">
				<button type="primary" @click="requestPermissions">
					授权读写相册
				</button>
			</view>

			<list-view style="flex:1;" ref="listView" :id="ipData.id" :rebound="false" :scroll-y="true"
				:custom-nested-scroll="true">
				<list-item :type="2" style="margin-top: 20px;"></list-item>
				<list-item class="album_list_sub" v-for="(itArr, index) in albumArrayData.tankData" :key="index">
					<view class="ab_it" v-for="(item, indexTwo) in itArr" :key="indexTwo  + item.id +''">
						<image class="ab_img" :style="albumStyle" :src="item.coverPicture" @click="getAlbumData(item)">
						</image>
						<text>{{item.name}} {{item.count}}</text>
						<!-- 选择备份相册 -->
						<view v-if="ipData.pattern == 2" class="sel_bak cent" :class="hfSel(item) ? 'pr_bg':''">
							<text v-if="hfSel(item)" class="col_fg">√</text>
						</view>
						<!-- 相册同步状态 -->
						<view v-else-if="bakYes && item.backups != 0" class="bak_state cent">
							<text class="col_fg " v-if="item.backups == 1">...</text>
							<text class="col_fg " v-if="item.backups == 2">√</text>
						</view>
					</view>
				</list-item>
				<list-item :type="99" style="height: 20px;"></list-item>
			</list-view>
		</view>


		<!-- 菜单栏 -->
		<view class="con_bottom" @click="drawerSwitch">
			<view class="c_b_con">
				<image :src="user.avatarUrl" class="m_hd_img"></image>
				<text class="usr_title">{{user.username}}</text>
				<view class="opt_lab " :class="{
					opt_lab_check: ipData.optLabCheck == 9
				}" @click="optionSwitch(9)">
					<text class="txt">相册</text>
				</view>
				<view v-if="user.uuid == ''" class="opt_lab " :class="{
					opt_lab_check: ipData.optLabCheck == 1
				}" @click="optionSwitch(1)">
					<text class="txt">登录</text>
				</view>
				<view class="opt_lab" :class="{
					opt_lab_check: ipData.optLabCheck == 3
				}" @click="optionSwitch(3)" v-if="user.uuid != ''">
					<text class="txt">设置</text>
				</view>
				<view class="opt_lab" :class="{
					opt_lab_check: ipData.optLabCheck == 2
				}" @click.stop="optionSwitch(2)" v-if="user.uuid != ''">
					<text class="txt">退出登录</text>
				</view>

				<view class="tank_info_view">
					<text class="txt_info">{{tankInfo.name}} {{tankInfo.version}} {{'已连接'}}</text>
					<text class="txt_info">{{tankInfo.copyright}}</text>
					<text class="txt_info">{{tankInfo.record}}</text>
				</view>
			</view>
		</view>


	</view>

</template>

<script setup>
	import { xxPermissions } from "@/uni_modules/xx-XXPermissions"
	import uniNavbarLite from "@/components/uni-navbar-lite/uni-navbar-lite.uvue"
	import { appConfig, globalData, tankSystemInfoType, appTaskStatus } from "@/store/global.data.uts";
	import { userInfoType } from "@/pages/login/login.logic.uts";
	import { albumArrayData, getalbums, tankAlbumType } from "./index.data.uts"
	import { theme } from "@/store/theme.uts"
	import { aaaaaaaaaaaaaaa, MyApiOptions } from "@/uni_modules/nn-sqlite"



	aaaaaaaaaaaaaaa({
		paramA: true
	} as MyApiOptions)
	// import { primaryColor } from "./uni.scss"
	// import iconpath from '@/static/icons/icons/iconfont.ttf'

	type indexPageDataType = {
		id : string,
		/**
		 * 抽屉选中
		 */
		optLabCheck : number,

		/**
		 * 容器是否打开
		 */
		conOpen : boolean
		/**
		 * 模式
		 * 1: 默认首页
		 * 2：选择进行备份的相册
		 */
		pattern : number
	}

	const ipData = reactive({
		id: "asdv3v2v1",
		optLabCheck: 9,
		pattern: 1,
		conOpen: false
	} as indexPageDataType)

	const user = computed(() : userInfoType => {
		return globalData.user
	})
	const tankInfo = computed(() : tankSystemInfoType => {
		return globalData.tankSystemInfo
	})



	// const upLoadFileStatus = computed(() : boolean => {
	// 	// setTimeout(function () {
	// 	// 	return appTaskStatus.backups == 1
	// 	// }, 1000);

	// })

	const percent_input = computed(() : number => {
		return (albumArrayData.upFileCount / albumArrayData.allUpFileCount) * 100
	})

	function hfSel(item : tankAlbumType) : boolean {
		return item.backups == 1 || item.backups == 2;
	}


	/**
	 * 抽屉开关
	 */
	function drawerSwitch() {
		ipData.conOpen = !ipData.conOpen
	}
	const bakYes = computed(() : boolean => {
		return appConfig.value.backup
	})

	const albumStyle = computed(() : string => {
		const { windowInfo } = globalData
		const res = (windowInfo.windowWidth - 48) / 2
		return `width: ${res}px;height: ${res}px;`
	})

	onLoad((param) => {
		if (param["pattern"] != null) {
			ipData.pattern = param["pattern"]!.toInt()
		}
	})
	// onCreated(() => {
	// 	uni.loadFontFace({
	// 		global: false,
	// 		family: 'AliYunIconsFontFamily',
	// 		source: iconpath,
	// 		success() { },
	// 		fail(err) {
	// 			//console.log(err);
	// 		},
	// 	})
	// })
	function bakPage() {
		uni.navigateBack()
	}
	/**
	 * 抽屉导航
	 */
	function optionSwitch(sheckValue : number) {
		ipData.optLabCheck = sheckValue
		switch (sheckValue) {
			case 1:
				uni.navigateTo({
					url: "/pages/login/login"
				})
				break;
			case 2:
				// 退出登录
				uni.showModal({
					title: "退出登录",
					content: "将失去你的登录状态，确定继续吗？",
					success(res) {
						if (res.confirm) {
							uni.getStorageInfo({
								success(res) {
									// //console.log("-------------------------", res);
									res.keys.forEach((key) => {
										uni.removeStorage({
											key: key
										})
									})
									globalData.user.uuid = ""
									globalData.user.username = ""
									globalData.user.avatarUrl = ""
									ipData.optLabCheck = 9
								}
							})
							albumArrayData.tankDataOnce.forEach((val) => {
								val.backups = 0
							})
						} else {
							ipData.optLabCheck = 9
						}
					}
				})



				break;
			case 3:
				uni.navigateTo({
					url: "/pages/setting/setting",
					success() {
						// ipData.conOpen = false
						setTimeout(function () {
							ipData.optLabCheck = 9
						}, 400);
					}
				})
				break;
		}
	}
	/**
	 * 前往相册详情页
	 */
	function getAlbumData(album : tankAlbumType) {
		if (ipData.pattern == 1) {
			uni.navigateTo({
				animationType: "pop-in",
				animationDuration: 50,
				url: `/pages/albumData/albumData?id=${album.correlationId.join(",")}&name=${album.name}`
			})
		} else if (ipData.pattern == 2) {
			if (album.backups == 0) {
				album.backups = 1
			} else if (album.backups == 1) {
				album.backups = 0
			} else {
				album.backups = 1
			}
		}

	}
	/**
	 * 权限申请
	 */
	function requestPermissions() {
		let permission = ["android.permission.READ_EXTERNAL_STORAGE", "android.permission.WRITE_EXTERNAL_STORAGE"]
		xxPermissions.requestSystemPermission(permission, "", function (allRight : boolean, grantedList : string[]) {
			if (allRight) {
				// 用户同意了全部权限
				//console.log("用户同意了全部权限", grantedList);
				getalbums()
				albumArrayData.authorizationStatus = true
				// this.
				// albumListLoadData.getalbums()
				// that.albumArray = albumListLoadData.albumArray
			} else {
				// 用户仅同意了 grantedList中的权限
				//console.log("用户仅同意了 grantedList中的权限");
			}
		}, function (doNotAskAgain : boolean, grantedList : string[]) {
			// 用户拒绝了部分权限，仅允许了grantedList中的权限
			if (doNotAskAgain) {
				// 用户拒绝了权限，并且选择不再询问
				//console.log("用户拒绝了权限，并且选择不再询问");
			}
			//console.log("用户拒绝了部分权限，仅允许了grantedList中的权限", grantedList);
		})
	}
</script>

<style lang="scss">
	.bor_all {
		border: $uni-color-primary 2px solid;
	}

	.bor_all1 {
		border: rgb(255, 255, 255, 0) 2px solid;
	}

	.col_fg {
		color: #fff;
	}

	.pr_bg {
		background-color: $uni-color-primary;
	}

	.cent {
		display: flex;
		// flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.container_abl {
		display: flex;
		position: relative;

		width: 100%;
		height: 100%;
		// border: 1rpx solid red;

		.con_main {
			width: 100%;
			height: 100%;
			background-color: $uni-bg-color;
			position: absolute;
			z-index: 1;

			transition-property: transform;
			transition-duration: 0.2s;

			.head_img {
				width: 70rpx;
				height: 70rpx;
				border-radius: 50rpx;
				background-color: $uni-color-primary;
				margin-right: 16px;
			}

			.head_bakcif_btn {
				width: 150rpx;
				height: 70rpx;
				border-radius: 20rpx;
				background-color: $uni-color-primary;
				color: #fff;
				margin-right: 16px;
				// display: flex;
				// flex-direction: row;
				// align-items: center;
				// justify-content: center;
			}

			.req_perssion {
				margin: 0 auto;
				margin-top: 20px;
				width: 400rpx;
			}


			.album_list_sub {
				display: flex;
				flex-direction: row;
				align-items: center;
				margin-bottom: 50rpx;


				.ab_it {
					// border: 1px solid red;
					display: flex;
					flex-direction: column;
					align-items: center;
					position: relative;

					.sel_bak {
						width: 40rpx;
						height: 40rpx;
						border: 2rpx solid $uni-color-primary;
						border-radius: 20rpx;
						position: absolute;
						top: 10rpx;
						right: 10rpx;
					}

					.bak_state {
						width: 40rpx;
						height: 40rpx;
						border: 2rpx solid #eee;
						border-radius: 20rpx;
						position: absolute;
						top: 10rpx;
						right: 10rpx;
					}


					.ab_img {
						border-radius: 35rpx;
						margin-bottom: 10px;
						overflow: hidden;
						// padding-right: 16px;
						margin-left: 16px;
					}

					.icon-yunduanshuaxin {
						font-family: "AliYunIconsFontFamily" !important;
						font-size: 22px;
						font-style: normal;
						color: #333;
					}
				}
			}
		}

		.tf_st {
			transform: scale(1, 1) translateX(0);
		}

		.tf_en {
			transform: scale(0.9, 0.9) translateX(450rpx);
			border-radius: 30px;
			box-shadow: 0px 3px 10px rgba(0, 0, 0, 1);
		}



		.con_bottom {
			width: 100%;
			height: 100%;
			background-color: $uni-color-primary;
			display: flex;
			flex-direction: row;


			.c_b_con {
				width: 490rpx;
				height: 100%;
				// border: 1px solid red;
				display: flex;
				position: relative;
				// justify-content: space-between;
				// justify-content: center;
				// align-items: center;

				.m_hd_img {
					width: 200rpx;
					height: 200rpx;
					border-radius: 200rpx;
					border: 1rpx solid $uni-bg-color;
					padding: 2px;
					margin: 0 auto;
					margin-top: 100rpx;
				}

				.usr_title {
					font-size: 50rpx;
					font-weight: 400;
					color: $uni-bg-color;
					margin: 0 auto;
					margin-top: 30rpx;
					margin-bottom: 300rpx;
				}

				.opt_lab {
					display: flex;
					flex-direction: row;
					// padding-right: 32rpx;
					padding: 40rpx 0 40rpx 40rpx;

					.txt {
						color: $uni-bg-color;
					}

				}

				.opt_lab_check {
					background-color: rgb(255, 255, 255, 0.1);
				}


				.tank_info_view {
					position: absolute;
					width: 100%;
					height: 200rpx;
					bottom: 100rpx;
					// border: 1px solid blue;
					// padding-left: 40rpx;
					display: flex;
					align-items: center;
					justify-content: center;

					.txt_info {
						margin-top: 10rpx;
						color: #fff;
					}

					// gap: 10rpx;
				}

				// .login_btn {
				// 	width: 60%;
				// 	margin: 0 auto;
				// }
			}

		}
	}
</style>