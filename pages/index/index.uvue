<template>


	<view class="container_abl" :style="conStyle">


		<!-- 相册容器 -->
		<view class="con_main" :class="conClass">
			<uni-navbar-lite :title="pattern == 1?'Tank 相册':'选择备份的相册'" :leftIcon="false" nbStyle="height:50px;">
				<template #right>
					<image v-if="pattern == 1" class="head_img" @click="drawerSwitch" :src="user.avatarUrl"></image>
					<view v-else-if="pattern == 2" class="head_bakcif_btn cent" @click="bakPage">
						<text class="col_fg">确定</text>
					</view>
				</template>
			</uni-navbar-lite>

			<view v-if="authorizationStatus == false" class="req_perssion">
				<button type="primary" @click="requestPermissions">
					授权读写相册
				</button>
			</view>

			<list-view style="flex:1;" ref="listView" :id=id :rebound="false" :scroll-y="true"
				:custom-nested-scroll="true">
				<list-item :type="2" style="margin-top: 20px;"></list-item>
				<list-item class="album_list_sub" v-for="(itArr, index) in albumArray" :key="index">
					<view class="ab_it" v-for="(item, indexTwo) in itArr" :key="indexTwo  + item.id +''">
						<image class="ab_img" :style="albumStyle" :src="item.coverImg" @click="getAlbumData(item)">
						</image>

						<text>{{item.name}} {{item.count}}</text>
						<view v-if="pattern == 2" class="sel_bak cent" :class="hfSel(item) ? 'pr_bg':''">
							<text v-if="hfSel(item)" class="col_fg">√</text>
						</view>
					</view>
				</list-item>
				<list-item :type="99" style="height: 20px;"></list-item>
			</list-view>
		</view>


		<!-- 菜单栏 -->
		<view class="con_bottom" @click="drawerSwitch">
			<view class="c_b_con">
				<image :src="user.avatarUrl" class="m_hd_img"></image>
				<text class="usr_title">{{user.username}}</text>
				<view class="opt_lab " :class="{
					opt_lab_check: optLabCheck == 9
				}" @click.stop="optionSwitch(9)">
					<text class="txt">相册</text>
				</view>
				<view v-if="user.uuid == ''" class="opt_lab " :class="{
					opt_lab_check: optLabCheck == 1
				}" @click.stop="optionSwitch(1)">
					<text class="txt">登录</text>
				</view>
				<view class="opt_lab" :class="{
					opt_lab_check: optLabCheck == 3
				}" @click.stop="optionSwitch(3)" v-if="user.uuid != ''">
					<text class="txt">设置</text>
				</view>
				<view class="opt_lab" :class="{
					opt_lab_check: optLabCheck == 2
				}" @click.stop="optionSwitch(2)" v-if="user.uuid != ''">
					<text class="txt">退出登录</text>
				</view>
			</view>
		</view>
	</view>

</template>

<script>
	import { xxPermissions } from "@/uni_modules/xx-XXPermissions"
	import { albumListLoadData } from "@/pages/index/abLoadData.logic"
	import uniNavbarLite from "@/components/uni-navbar-lite/uni-navbar-lite.uvue"
	import { appConfig, bakAlbumType, globalData } from "@/store/global.data.uts";
	import { userInfoType } from "@/pages/login/login.logic.uts";
	import { albumArrayData, getalbums, tankAlbumType } from "./index.data.uts"
	import { UTSAndroid } from "io.dcloud.uts";
	// import Runnable from "java.lang.Runnable";
	import Thread from "java.lang.Thread";

	const { screenHeight, screenWidth } = globalData.windowInfo
	export default {
		components: {
			uniNavbarLite
		},
		data() {

			return {
				id: "ajsdjg0lkasdjglfka",
				authorizationStatus: albumArrayData.authorizationStatus,
				/**
				 * 相册列表
				 */
				albumArray: albumArrayData.tankData as Array<Array<tankAlbumType>>,
				/**
				 * 容器状态
				 */
				conClass: "tf_st",
				/**
				 * 抽屉选中
				 */
				optLabCheck: 9,
				/**
				 * 模式 
				 * 1: 默认首页 
				 * 2：选择进行备份的相册
				 */
				pattern: 1
			};
		},
		computed: {
			conStyle() : string {
				return `height:${screenHeight}px;width:${screenWidth}px;`
			},
			user() : userInfoType {
				return globalData.user
			},
			albumStyle() : string {
				const { windowInfo } = globalData
				const res = (windowInfo.windowWidth - 48) / 2
				return `width: ${res}px;height: ${res}px;`
			}
		},
		onLoad(param) {
			// if(param)
			// console.log("参数", param["pattern"]);
			if (param["pattern"] != "") {
				this.pattern = param["pattern"]!.toInt()
				// console.log("--------------", this.pattern);
			}

		},
		onShow() {
			// this.reqTest()
			// const test = newThread(()=>{
			// 	console.log("==========hhhhhhhhhhhhhhhhhh");
			// })
			// test.start()

			// let currentDispatcher = UTSAndroid.getDispatcher()
			// console.log("currentDispatcher", currentDispatcher)
			// // 期望在 io 任务队列执行
			// UTSAndroid.getDispatcher("io").async(function (_) {
			// 	console.log("当前任务执行在", Thread.currentThread().getName())
			// 	// 期望在 主线程 任务队列执行
			// 	// UTSAndroid.getDispatcher("main").async(function (_) {
			// 	// 	console.log("当前任务执行在", Thread.currentThread().getName())
			// 	// 	currentDispatcher.async(function (_) {
			// 	// 		console.log("起始任务执行在", Thread.currentThread().getName())
			// 	// 	}, null)
			// 	// }, null)
			// }, null)

		},
		methods: {
			hfSel(item : tankAlbumType) : boolean {

				return item.backups == 1 || item.backups == 2;
			},
			bakPage() {

				uni.navigateBack({
					complete() {
						const bakArr : Array<bakAlbumType> = []
						const albumArr = albumArrayData.tankData
						albumArr.forEach((value) => {
							value.forEach((val) => {
								if (val.backups != 0) {
									bakArr.push({
										uuid: val.uuid,
										name: val.name,
										id: val.id
									} as bakAlbumType)
								}
							})
						})
						appConfig.value.bakAlbumArr = bakArr
					}
				})
			},
			/**
			 * 抽屉导航
			 */
			optionSwitch(sheckValue : number) {
				this.optLabCheck = sheckValue
				switch (sheckValue) {
					case 1:
						uni.navigateTo({
							url: "/pages/login/login"
						})
						break;
					case 2:
						break;
					case 3:
						uni.navigateTo({
							url: "/pages/setting/setting",
							success() {
								this.conClass = "tf_st"
								this.optLabCheck = 9
							}
						})
						break;

				}
			},
			/**
			 * 抽屉开关
			 */
			drawerSwitch() {
				if (this.conClass == "tf_st") {
					this.conClass = "tf_en"
				} else {
					this.conClass = "tf_st"
				}
			},
			/**
			 * 前往相册详情页
			 */
			getAlbumData(album : tankAlbumType) {
				if (this.pattern == 1) {
					uni.navigateTo({
						animationType: "pop-in",
						animationDuration: 50,
						url: `/pages/albumData/albumData?id=${album.id}&name=${album.name}`
					})
				} else if (this.pattern == 2) {
					if (album.backups == 0) {
						album.backups = 1
					} else if (album.backups == 1) {
						album.backups = 0
					} else {
						album.backups = 1
					}
				}

			},
			/**
			 * 权限申请
			 */
			requestPermissions() {
				const that = this
				let permission = ["android.permission.READ_EXTERNAL_STORAGE", "android.permission.WRITE_EXTERNAL_STORAGE"]
				xxPermissions.requestSystemPermission(permission, "", function (allRight : boolean, grantedList : string[]) {
					if (allRight) {
						// 用户同意了全部权限
						console.log("用户同意了全部权限", grantedList);
						getalbums()
						albumArrayData.authorizationStatus = true
						// this.
						// albumListLoadData.getalbums()
						that.authorizationStatus = true
						// that.albumArray = albumListLoadData.albumArray
					} else {
						// 用户仅同意了 grantedList中的权限
						console.log("用户仅同意了 grantedList中的权限");
					}
				}, function (doNotAskAgain : boolean, grantedList : string[]) {
					// 用户拒绝了部分权限，仅允许了grantedList中的权限
					if (doNotAskAgain) {
						// 用户拒绝了权限，并且选择不再询问
						console.log("用户拒绝了权限，并且选择不再询问");
					}
					console.log("用户拒绝了部分权限，仅允许了grantedList中的权限", grantedList);
				})
			},
		}
	}
</script>

<style lang="scss">
	.bor_all {
		border: $uni-color-primary 2px solid;
	}

	.bor_all1 {
		border: rgb(255, 255, 255, 0) 2px solid;
	}

	.col_fg {
		color: #fff;
	}

	.pr_bg {
		background-color: $uni-color-primary;
	}

	.cent {
		display: flex;
		// flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.container_abl {
		display: flex;
		position: relative;
		transition-property: transform;
		transition-duration: 3s;
		// border: 1rpx solid red;

		.con_main {
			width: 100%;
			height: 100%;
			background-color: $uni-bg-color;
			position: absolute;
			z-index: 1;
			box-shadow: 0px 3px 10px rgba(0, 0, 0, 1);

			.head_img {
				width: 70rpx;
				height: 70rpx;
				border-radius: 50rpx;
				background-color: $uni-color-primary;
				// display: flex;
				// justify-content: center;
				// align-items: center;
				margin-right: 16px;
			}

			.head_bakcif_btn {
				width: 150rpx;
				height: 70rpx;
				border-radius: 20rpx;
				background-color: $uni-color-primary;
				color: #fff;
				margin-right: 16px;
				// display: flex;
				// flex-direction: row;
				// align-items: center;
				// justify-content: center;
			}

			.req_perssion {
				margin: 0 auto;
				margin-top: 20px;
				width: 400rpx;
			}

			.album_list_sub {
				display: flex;
				flex-direction: row;
				align-items: center;
				margin-bottom: 50rpx;


				.ab_it {
					// border: 1px solid red;
					display: flex;
					flex-direction: column;
					align-items: center;
					position: relative;

					.sel_bak {
						width: 40rpx;
						height: 40rpx;
						border: 2rpx solid $uni-color-primary;
						border-radius: 20rpx;
						position: absolute;
						top: 10rpx;
						right: 10rpx;
					}


					.ab_img {
						border-radius: 35rpx;
						margin-bottom: 10px;
						// padding-right: 16px;
						margin-left: 16px;
					}
				}
			}
		}

		.tf_st {
			transform: scale(1, 1) translateX(0);
		}

		.tf_en {
			transform: scale(0.9, 0.9) translateX(450rpx);
			border-radius: 30px;
		}



		.con_bottom {
			width: 100%;
			height: 100%;
			background-color: $uni-color-primary;
			display: flex;
			flex-direction: row;


			.c_b_con {
				width: 490rpx;
				height: 100%;
				// border: 1px solid red;
				display: flex;
				// justify-content: space-between;
				// justify-content: center;
				// align-items: center;

				.m_hd_img {
					width: 200rpx;
					height: 200rpx;
					border-radius: 200rpx;
					border: 1rpx solid $uni-bg-color;
					padding: 2px;
					margin: 0 auto;
					margin-top: 100rpx;
				}

				.usr_title {
					font-size: 50rpx;
					font-weight: 400;
					color: $uni-bg-color;
					margin: 0 auto;
					margin-top: 30rpx;
					margin-bottom: 300rpx;
				}

				.opt_lab {
					display: flex;
					flex-direction: row;
					// padding-right: 32rpx;
					padding: 40rpx 0 40rpx 40rpx;

					.txt {
						color: $uni-bg-color;
					}

				}

				.opt_lab_check {
					background-color: rgb(255, 255, 255, 0.1);
				}

				.login_btn {
					width: 60%;
					margin: 0 auto;
				}
			}

		}
	}
</style>