import { UTSAndroid } from "io.dcloud.uts";
import MediaStore from "android.provider.MediaStore";
import ContentResolver from "android.content.ContentResolver";
import Cursor from "android.database.Cursor";
import Uri from "android.net.Uri";
import HashMap from "java.util.HashMap";
// import WindowManager from "android.view.WindowManager";
// import ContentUris from "android.content.ContentUris";







/**
 * 媒体文件类
 */
export class mediaFile {
	/**
	 * url
	 */
	url : string
	/**
	 * 1 图片 
	 * 2: 视频
	 */
	type : number;
	constructor(type : number, url : string) {
		this.url = url
		this.type = type
	}
}
/**
 * 相册类
 */
export class Album {
	/**
	 * 相册id
	 */
	id : number;
	/**
	 * 相册名称
	 */
	name : string;
	/**
	 * 封面照片途径 Url
	 */
	coverPicture : string
	/**
	 * 文件数量
	 */
	count : number = 0;
	/**
	 * 关联的相册id
	 */
	correlationId : HashMap<number, number> = hashMapOf()
	constructor(id : number, name : string, url : string) {
		this.id = id;
		this.name = name;
		this.coverPicture = url
		this.correlationId[id] = 1
	}
}


/**
 * 统计相册照片数量
 */
type photoListType = HashMap<string, Album>



/**
 *  MediaStore.Files.getContentUri("external") 查询整个外部存储库
 */
class fileClumns {
	// 主键id
	static _ID = MediaStore.Files.FileColumns._ID
	// 所属相册id
	static BUCKET_ID = MediaStore.Files.FileColumns.BUCKET_ID
	// 所属相册名称
	static BUCKET_DISPLAY_NAME = MediaStore.Files.FileColumns.BUCKET_DISPLAY_NAME;
	// 添加日期
	static DATE_ADDED = MediaStore.Files.FileColumns.DATE_ADDED;
	// 磁盘路径
	static DATA = MediaStore.Files.FileColumns.DATA
	// /**
	//  * 文件名
	//  */
	// static TITLE = MediaStore.Files.FileColumns.TITLE
}


// 相册工具类
export class albumUtil {

	// 需要的媒体文件属性
	static mediaFileOption = arrayOf(
		//获取ID列的数据
		fileClumns._ID,
		// 所属相册id
		fileClumns.BUCKET_ID,
		// 添加日期
		fileClumns.DATE_ADDED,
		// 磁盘路径
		fileClumns.DATA,
		// /**
		//  * 文件名
		//  */
		// fileClumns.TITLE,
	)


	// 相册列表
	// static albums : Array<Album> = [];



	/**
	 *  查询文件制作相册时需要的属性
	 */
	static albumsOption = arrayOf(
		// 所属相册id
		fileClumns.BUCKET_ID,
		// 所属相册名称
		fileClumns.BUCKET_DISPLAY_NAME,
		// 添加日期
		fileClumns.DATE_ADDED,
		// 磁盘路径
		fileClumns.DATA
	)



	/**
	 * 获取所有相册
	 * 应该根据相册id分组查询
	 */
	static getAlbum() : Array<Album> {
		// console.log("---------------进来了  ···111");
		// const { albums } = albumUtil
		const albums : Array<Album> = []
		const photoList : photoListType = hashMapOf()
		let contentResolver : ContentResolver = UTSAndroid.getAppContext()!.getContentResolver();
		albumUtil.queryAlbumsPro(contentResolver, MediaStore.Images.Media.EXTERNAL_CONTENT_URI, albums, photoList)
		albumUtil.queryAlbumsPro(contentResolver, MediaStore.Video.Media.EXTERNAL_CONTENT_URI, albums, photoList)
		return albums
	}



	/**
	 * 分析出相册列表
	 */
	static queryAlbumsPro(contentResolver : ContentResolver, uri : Uri, albums : Array<Album>, photoList : photoListType) {
		const { albumsOption } = albumUtil
		// 查询图片文件
		const cursor : Cursor = contentResolver.query(
			uri,
			albumsOption,//列
			"",//查询条件
			null,
			MediaStore.Video.Media.DATE_ADDED + " DESC"
		) as Cursor
		let fileBucketId = cursor.getColumnIndexOrThrow(fileClumns.BUCKET_ID)
		let fileBucketDisplayName = cursor.getColumnIndexOrThrow(fileClumns.BUCKET_DISPLAY_NAME)
		let fileUrl = cursor.getColumnIndexOrThrow(fileClumns.DATA)
		while (cursor.moveToNext()) {
			let bucketId : number = cursor.getLong(fileBucketId)
			let bucketDisplayName : string = cursor.getString(fileBucketDisplayName)
			// console.log("-------", cursor.getString(fileUrl));
			const url = cursor.getString(fileUrl)
			// let uri : Uri = Uri.parse(url) //转换。直接获取，有些图片获取不了
			const item : Album | null = photoList[bucketDisplayName]
			if (item == null) {
				photoList[bucketDisplayName] = new Album(bucketId, bucketDisplayName, url)
				photoList[bucketDisplayName]!!.count = 1
				albums.push(photoList[bucketDisplayName]!);
			} else {
				item!!.count += 1
				item.correlationId[bucketId] = 1
			}
		}
	}






	/**
	 * 根据相册 id 获取里面的照片（包括gif）和视频
	 */
	static getAlbumsData(bucketId : Array<number>) : Array<mediaFile> {
		// const arr = [111, 3333445]






		const uriList : Array<mediaFile> = []
		let contentResolver : ContentResolver = UTSAndroid.getAppContext()!.getContentResolver();
		const { BUCKET_ID, DATE_ADDED, DATA } = fileClumns



		const strArr : string[] = []
		bucketId.forEach((val) => {
			strArr.push(`${BUCKET_ID} = '${val}'`)
		})

		console.log("??????????????????", strArr.join(" or "));
		// 查询图片
		let cursor : Cursor = contentResolver.query(
			MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
			albumUtil.mediaFileOption,//列
			// BUCKET_ID + "='" + bucketId + "'",//查询条件
			strArr.join(" or "),
			// `${bucketId.join()}` ,
			null,
			DATE_ADDED + " DESC"
		) as Cursor

		let fileUrl = cursor.getColumnIndexOrThrow(DATA)
		while (cursor.moveToNext()) {
			const url = cursor.getString(fileUrl)
			// let uri : Uri = Uri.parse(url) //转换
			uriList.push(new mediaFile(1, url))
		}


		// 查询视频
		let cursorVideo : Cursor = contentResolver.query(
			MediaStore.Video.Media.EXTERNAL_CONTENT_URI,
			albumUtil.mediaFileOption,//列
			BUCKET_ID + "='" + bucketId + "'",//查询条件
			null,
			DATE_ADDED + " DESC"
		) as Cursor

		let fileVideoUrl = cursor.getColumnIndexOrThrow(DATA)
		while (cursorVideo.moveToNext()) {
			const url = cursorVideo.getString(fileVideoUrl)
			// let uri : Uri = Uri.parse(url) //转换
			uriList.push(new mediaFile(2, url))
		}
		return uriList
	}




}