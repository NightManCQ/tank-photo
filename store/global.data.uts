import { userInfoType } from "../pages/login/login.logic.uts"
import { fileDetailType } from "@/store/tank.movement.uts"
import { userInfoKeyName, systemConfigKeyName, backupFileKeyName } from "@/store/storage.key.uts"
// import { getalbums } from "@/pages/index/index.data.uts"





type SafeArea = {
	bottom : number;
	height : number;
	left : number;
	right : number;
	top : number;
	width : number;
}

type SafeAreaInsets = {
	bottom : number;
	left : number;
	right : number;
	top : number;
}


/**
 * 当前设备窗口信息
 */
type windowInfoType = {
	pixelRatio : number;
	// safeArea : SafeArea;
	// safeAreaInsets : SafeAreaInsets;
	screenHeight : number;
	screenTop : number;
	screenWidth : number;
	statusBarHeight : number;
	windowBottom : number;
	windowHeight : number;
	windowTop : number;
	windowWidth : number;
}




/**
 * tank 的系统信息
 */
export type tankSystemInfoType = {
	downloadDirMaxSize : number;
	copyright : string;
	defaultTotalSizeLimit : number;
	scanConfig : string;
	updateTime : string;
	downloadDirMaxNum : number;
	sort : number;
	uuid : string;
	version : string;
	logoUrl : string;
	deletedKeepDays : number;
	faviconUrl : string;
	createTime : string;
	record : string;
	name : string;
	allowRegister : boolean;
	previewConfig : string;
}







/**
 * 设备信息
 */
type deviceldInfoType = {
	/**
	 * 品牌
	 */
	brand : string
	/**
	 * 认证型号
	 */
	model : string
}



/**
 * 非响应式静态数据
 */
type staticDataTyep = {
	/**
	 * 设备信息
	 */
	deviceld : deviceldInfoType

	/**
	 * 备份文件夹
	 */
	backupFile : fileDetailType
}

/**
 * 静态全局数据
 */
export const staticData : staticDataTyep = {
	backupFile: {
		"createTime": "",
		"deleteTime": "",
		"deleted": false,
		"dir": true,
		"md5": "",
		"name": "",
		"path": "",
		"privacy": false,
		"prop": "{}",
		"puuid": "",
		"size":
			//‍[number]‍
			0,
		"sort":
			//‍[number]‍
			1711696034273,
		"spaceUuid": "",
		"space_name": "",
		"times":
			//‍[number]‍
			0,
		"updateTime": "",
		"userUuid": "",
		"uuid": "",
		"visitTime": ""
	},
	deviceld: {
		model: "",
		brand: ""
	}
}





/**
 * 响应式全局数据
 */
type globalDataType = {

	/**
	 * tank 的系统信息
	 */
	tankSystemInfo : tankSystemInfoType
	/**
	 * 当前设备的窗口信息
	 */
	windowInfo : windowInfoType
	/**
	 * tank 的登录用户信息
	 */
	user : userInfoType
}
/**
 * 响应式全局数据
 */
export const globalData = reactive({
	// server: "",
	// server: "https://pan.promise.pink:442"
	tankSystemInfo: {
		"downloadDirMaxSize": -1,
		"copyright": "",
		"defaultTotalSizeLimit": -1,
		"scanConfig": "{}",
		"updateTime": "",
		"downloadDirMaxNum": -1,
		"sort": 1708484287421,
		"uuid": "",
		"version": "4.0.2",
		"logoUrl": "",
		"deletedKeepDays": 7,
		"faviconUrl": "",
		"createTime": "",
		"record": "",
		"name": "",
		"allowRegister": false,
		"previewConfig": "{}"
	},
	windowInfo: {
		"pixelRatio": 3,
		"screenHeight": 890,
		"screenTop": 0,
		"screenWidth": 400,
		"statusBarHeight": 39,
		"windowBottom": 0,
		"windowHeight": 890,
		"windowTop": 0,
		"windowWidth": 400
	},
	user: {
		lastTime: "",
		role: "",
		spaceUuid: "",
		createTime: "",
		avatarUrl: "",
		lastIp: "",
		updateTime: "",
		sort: 0,
		uuid: "",
		space: {
			sizeLimit: 0,
			totalSize: 0,
			createTime: "",
			name: "",
			userUuid: "",
			totalSizeLimit: 0,
			updateTime: "",
			sort: 0,
			type: "",
			uuid: "",
			user: null
		},
		username: "",
		status: "",
	}


} as globalDataType)




/**
 * 备份的相册列表
 * 本地所有相册列表
 */
export type bakAlbumType = {
	/**
	 * tank 服务器上的id
	 */
	uuid ?: string
	/**
	 * 名称
	 */
	name : string
	/**
	 * 本地相册id
	 */
	id : number
	/**
	 * 释放本地空间
	 * true 将导致本地文件删除，保留服务器上的文件
	 */
	releaseSpace : boolean
}

/**
 * tank 程序设置内容
 */
type configType = {
	/**
	 * 是否开启备份，默认false
	 */
	backup : boolean
	/**
	 * 是否使用移动网络进行备份，默认false
	 */
	mobileNetworkBackup : boolean
	/**
	 * 相册列表展示多少列
	 */
	albumClumns : 1 | 2 | 3
	/**
	 * 相册详情页展示多少列
	 */
	albumDetailClumns : 1 | 2 | 3
	/**
	 * tank 相册目前最大支持500相册列表的同步
	 */
	maxPageSize : number
	/**
	 * 服务器地址
	 */
	server : string
	/**
	 * 登录名
	 */
	username : string
	/**
	 * 登录密码
	 */
	password : string
}
/**
 * 应用配置
 */
export type appConfigType = {
	value : configType
}
/**
 * tank 应用设置 
 */
export const appConfig = reactive({
	value: {
		backup: false,
		mobileNetworkBackup: false,
		albumClumns: 2,
		albumDetailClumns: 3,
		maxPageSize: 500,
		server: "",
		username: "",
		password: ""
	}
} as appConfigType)


/**
 * tank app 任务的执行状态
 */
type appTaskStatusType = {
	/**
	 * 备份上传、下载状态
	 * 0：没有备份任务或者备份状态停止
	 * 1：正在备份
	 * 2：备份任务完成
	 */
	backups : 0 | 1 | 2
	/**
	 * 任务队列工作中？？？
	 */
	taskQueueWorkIng : boolean
}

/**
 * tank app 任务的执行状态
 */
export const appTaskStatus = reactive({
	backups: 0,
	taskQueueWorkIng: false
} as appTaskStatusType)








/**
 * 中央仓库初始化
 */
export function storeInit() {
	// 初始化窗口信息
	const res = uni.getWindowInfo();
	const { windowInfo } = globalData
	windowInfo.windowHeight = res.windowHeight
	windowInfo.windowWidth = res.windowWidth
	windowInfo.screenHeight = res.screenHeight
	windowInfo.screenWidth = res.screenWidth
	windowInfo.pixelRatio = res.pixelRatio

	// 获取 tank app设置 必须要同步
	const conf = uni.getStorageSync(systemConfigKeyName)
	if (typeof conf == "object") {
		appConfig.value = JSON.parse<configType>(JSON.stringify(conf))!
	}
	// uni.getStorage({
	// 	key: systemConfigKeyName,
	// 	success(res) {
	// 		appConfig.value = JSON.parse<configType>(JSON.stringify(res.data))!
	// 		// 
	// 	}
	// })

	// 获取备份文件夹信息
	uni.getStorage({
		key: backupFileKeyName,
		success(res) {
			// console.log("---------------？？", res);
			staticData.backupFile = JSON.parse<fileDetailType>(JSON.stringify(res.data))!
		}
	})

	// 获取用户信息
	uni.getStorage({
		key: userInfoKeyName,
		success(res) {
			globalData.user = JSON.parse<userInfoType>(JSON.stringify(res.data))!
		}
	})

	console.log("执行逻辑成功：仓库初始化", globalData)
}